stages:
  - lint
  - test
  - security

variables:
  npm_config_cache: "$CI_PROJECT_DIR/.npm"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm/

# ---- LINT ----
lint:
  stage: lint
  image: node:20-alpine
  script:
    - npm ci
    - npx eslint .
  only:
    - merge_requests
    - branches

# ---- TEST ----
test:
  stage: test
  image: node:20-alpine
  services:
    - name: postgres:16-alpine
      alias: db
  variables:
    POSTGRES_HOST: db
    POSTGRES_USER: user
    POSTGRES_PASSWORD: password
    POSTGRES_DB: myapp
  script:
    - npm ci
    - npm run test
  only:
    - merge_requests
    - branches

# ---- SECURITY SCAN : DÃ©pendances npm ----
security:npm-audit:
  stage: security
  image: node:20-alpine
  script:
    - npm ci
    - npm audit --audit-level=moderate
  allow_failure: true 
  only:
    - merge_requests
    - branches

# ---- SECURITY SCAN : Image Docker ----
security:trivy:
  stage: security
  image: aquasec/trivy:latest
  script:
    - trivy image --severity HIGH,CRITICAL $CI_REGISTRY_IMAGE:latest || true
  allow_failure: true
  only:
    - merge_requests
    - branches
